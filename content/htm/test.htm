<!DOCTYPE html>
<html>
  <head>
    <title>Custom Street View Panoramas</title>
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 93%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
 <body onload="start()">
 <div id="POPUP" style="visibility:hidden;position: absolute; transform: translate(-50%, -50%); z-index: 1000; color: white; font-size: 20px; left: 80%; top: 30%; background-color: rgba(0, 0, 0, 0.3); padding: 5px; border-radius: 3px; text-align: center;"></div>
 <div id="map"></div>

  <div id="marker1" onclick="markclick(1);" onmouseover="document.getElementById('textmark1').style.visibility = 'visible'" onmouseleave="document.getElementById('textmark1').style.visibility = 'hidden'" style="visibility:hidden; background-color: rgb(184, 205, 54); width: 45px; height: 45px; line-height: 54px; border-radius: 22.5px; position: absolute; cursor: pointer; z-index: 1; display: block; left: 50%; top: 50%; transform: translate(50%, 50%);">
  <i id="textmark1" style="visibility:hidden; font-size: 20px; text-align: center; color: rgb(255, 255, 255); padding: 0px; pointer-events: none;">1</i></div> 
  
   <div id="marker2"onclick="markclick(2);" onmouseover="document.getElementById('textmark2').style.visibility = 'visible'" onmouseleave="document.getElementById('textmark2').style.visibility = 'hidden'" style="visibility:hidden; background-color: rgb(184, 205, 54); width: 45px; height: 45px; line-height: 54px; border-radius: 22.5px; position: absolute; cursor: pointer; z-index: 1; display: block; left: 50%; top: 50%; transform: translate(50%, 50%);">
  <i id="textmark2" style="visibility:hidden; font-size: 20px; text-align: center; color: rgb(255, 255, 255); padding: 0px; pointer-events: none;">2</i></div> 
  
  <div id="marker3" onclick="markclick(3);" onmouseover="document.getElementById('textmark3').style.visibility = 'visible'" onmouseleave="document.getElementById('textmark3').style.visibility = 'hidden'" style="visibility:hidden; background-color: rgb(184, 205, 54); width: 45px; height: 45px; line-height: 54px; border-radius: 22.5px; position: absolute; cursor: pointer; z-index: 1; display: block; left: 50%; top: 50%; transform: translate(50%, 50%);">
  <i id="textmark3" style="visibility:hidden; font-size: 20px; text-align: center; color: rgb(255, 255, 255); padding: 0px; pointer-events: none;">3</i></div> 
 
   <div id="floating-panel" style="visibility:visible;">
    <table>
        <td><b>Zoom</b></td><td id="zoom-cell" value=1>1</td>
        <td><b>POV Heading</b></td><td id="heading-cell" value=270>270</td>
        <td><b>POV Pitch</b></td><td id="pitch-cell">0.0</td>
        <td><b>FOV</b></td><td id="fov-cell">90</td>
        <td><b>Pano ID</b></td><td id="pano-cell">&nbsp;</td>
      <table id="links_table"></table>
    </table>
   </div>

   <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAP4ydqaw0mv1nfHBQPZwMbbAkMa9mxcUo&callback=initPano">
    </script>
	
    <script>
	var panorama, panoatribute, txtFile, ancienpano=-1;var tempovalue = [
	'{"ID":"0","name":"Start","link0": {"heading": 286,"description": "go1","pano": 1}}',//start
	'{"ID":"1","name":"Pano1","link0": {"heading": 286,"description": "go2","pano": 2},"POPUP1":"EPSI <br><a href=http://epsi.fr target=_blank><img src=epsi.jpg></a>","V1":330,"V2":90,"mark1":{"X":11,"Y":-5,"name":"PC","cont":"Un PC"},"mark2":{"X":324,"Y":-1,"name":"Tableau","cont":"Un tableau"},"mark3":{"X":222,"Y":0,"name":"Exterieur","cont":"AccÃ¨s a l\'exterieur du batiment"}}',
	'{"ID":"2","name":"Pano2","link0": {"heading": 105,"description": "go1","pano": 1},"link1": {"heading": 286,"description": "go3","pano": 3}}',
	'{"ID":"3","name":"Pano3","link0": {"heading": 105,"description": "go2","pano": 2}}'
	];
	
function start()
{	
	var i=0;
	while(true){
		if(document.getElementsByTagName("div")[i].innerHTML=="For development purposes only"){document.getElementsByTagName('div')[i].style.visibility="hidden";break;}
		i++;
	}
	document.getElementsByClassName("dismissButton")[0].click();
	//$(.dismissButton).each(function(){$(this).trigger('click');});
	//$(#button).click();
	intervalId = setInterval(bip, 33);
}

var cache_oldPOV=270;
function bip()
{
var correc=2;var recupPOV=document.getElementById("heading-cell").innerHTML;

if(recupPOV!=cache_oldPOV || ancienpano!=panoatribute){
if(ancienpano!=panoatribute){ancienpano=panoatribute;document.getElementById("marker1").style.visibility="hidden";document.getElementById("marker2").style.visibility="hidden";document.getElementById("marker3").style.visibility="hidden";}
cache_oldPOV=recupPOV;

//----------------------------------------------POPUP----------------------------------------------
//if(recupPOV==undefined)document.getElementById("heading-cell").value;
var obj = JSON.parse(tempovalue[panoatribute]); var calcV=obj.V1+obj.V2;
//alert(calcV);
if(obj.V1+obj.V2>360){
	var V2coor=obj.V1+obj.V2-360;
	if((recupPOV>=obj.V1 && recupPOV<=360)||(recupPOV>=0 && recupPOV<=V2coor)){
	if(document.getElementById("POPUP").style.visibility=="hidden"){
		document.getElementById("POPUP").innerHTML=obj.POPUP1;
		document.getElementById("POPUP").style.visibility="visible";
		}
	}
	else {if(document.getElementById("POPUP").style.visibility=="visible")document.getElementById("POPUP").style.visibility="hidden";}
}
else{
	if(recupPOV>=obj.V1 && recupPOV<=obj.V2){
	if(document.getElementById("POPUP").style.visibility=="hidden"){
		document.getElementById("POPUP").innerHTML=obj.POPUP1;
		document.getElementById("POPUP").style.visibility="visible";
		}
	}
	else {if(document.getElementById("POPUP").style.visibility=="visible")document.getElementById("POPUP").style.visibility="hidden";}
}
//----------------------------------------------POPUP_end----------------------------------------------

//mark POV
var recupFOV=document.getElementById("fov-cell").innerHTML,unP=100/recupFOV;
//--------------------------------------------------mark1--------------------------------------------------
if(recupFOV!="NaN"){
if (typeof(obj.mark1.X) !== 'undefined' || variable !== null) {//if(obj.mark1.X!=undefined){//GO_X
var dX=obj.mark1.X, dY=obj.mark1.Y, textmarker=obj.mark1.name;//VAL1
  var std=parseInt(recupPOV-recupFOV/(correc));var stf=parseInt(parseInt(recupPOV)+parseInt(recupFOV)/(correc));var varX=0, varY=50,found=0,teststd=std,i=-1;
  if(std<0){stf+=360;}if(stf>360){stf-=360;}
  while(teststd!=stf)
  {
	teststd++;if(teststd>360)teststd=0;if(teststd==dX){varX=unP*i;found=1;break;}i++;
  }
  if(varX>96){found=0;}
  if(found==1)//GO_Y
  {
	var recupPitch=document.getElementById("pitch-cell").innerHTML;teststd=parseInt(parseInt(recupPitch)+parseInt(recupFOV)/(correc));
	var teststf=parseInt(parseInt(recupPitch)-parseInt(recupFOV)/(correc));i=-1;
	while(teststd!=teststf)
	{
		teststd--;if(teststd==dY){varY=unP*i;found=2;break;}i++;
	}
	if(Math.abs(recupPitch)-Math.abs(dY)>25){varY=0;found=1;}
  }
   if(varX>0&&varY>0 &&varX<96)//found==2)//affiche
   {
	document.getElementById("marker1").style.top=varY.toString()+"%";document.getElementById("marker1").style.left=varX.toString()+"%";
	//var varXtext=varX-22,varYtext=varY+22;document.getElementById("textmark1").style.top=varYtext.toString()+"%";document.getElementById("textmark1").style.left=varXtext.toString()+"%";
	document.getElementById("marker1").style.visibility="visible";
	//textmarker=varX+","+varY;
	document.getElementById("textmark1").innerHTML=textmarker;//textmarker
   }
   else document.getElementById("marker1").style.visibility="hidden";
}else document.getElementById("marker1").style.visibility="hidden";
//--------------------------------------------------mark2--------------------------------------------------
if(obj.mark2.X!=undefined){//GO_X
var dX=obj.mark2.X, dY=obj.mark2.Y, textmarker=obj.mark2.name;//VAL2
  var std=parseInt(recupPOV-recupFOV/(correc));var stf=parseInt(parseInt(recupPOV)+parseInt(recupFOV)/(correc));var varX=0, varY=50,found=0,teststd=std,i=-1;
  if(std<0){stf+=360;}if(stf>360){stf-=360;}
  while(teststd!=stf)
  {
	teststd++;if(teststd>360)teststd=0;if(teststd==dX){varX=unP*i; found=1;break;}i++;
  }
  if(varX>96){found=0;}
  if(found==1)//GO_Y
  {
	var recupPitch=document.getElementById("pitch-cell").innerHTML;teststd=parseInt(parseInt(recupPitch)+parseInt(recupFOV)/(correc));
	var teststf=parseInt(parseInt(recupPitch)-parseInt(recupFOV)/(correc));i=-1;
	while(teststd!=teststf)
	{
		teststd--;if(teststd==dY){varY=unP*i;found=2;break;}i++;
	}
	if(Math.abs(recupPitch)-Math.abs(dY)>25){varY=0;found=1;}
  }
   if(varX>0&&varY>0 &&varX<96)//found==2)//affiche
   {
	document.getElementById("marker2").style.top=varY.toString()+"%";document.getElementById("marker2").style.left=varX.toString()+"%";
	document.getElementById("marker2").style.visibility="visible";
	//textmarker=varX+","+varY;
	document.getElementById("textmark2").innerHTML=textmarker;//textmarker
   }
   else document.getElementById("marker2").style.visibility="hidden";
}else document.getElementById("marker2").style.visibility="hidden";
//--------------------------------------------------mark3--------------------------------------------------
if(obj.mark3.X!=undefined){//GO_X
var dX=obj.mark3.X, dY=obj.mark3.Y, textmarker=obj.mark3.name;//VAL3
  var std=parseInt(recupPOV-recupFOV/(correc));var stf=parseInt(parseInt(recupPOV)+parseInt(recupFOV)/(correc));var varX=0, varY=50,found=0,teststd=std,i=-1;
  if(std<0){stf+=360;}if(stf>360){stf-=360;}
  while(teststd!=stf)
  {
	teststd++;if(teststd>360)teststd=0;if(teststd==dX){varX=unP*i; found=1;break;}i++;
  }
  if(varX>96){found=0;}
  if(found==1)//GO_Y
  {
	var recupPitch=document.getElementById("pitch-cell").innerHTML;teststd=parseInt(parseInt(recupPitch)+parseInt(recupFOV)/(correc));
	var teststf=parseInt(parseInt(recupPitch)-parseInt(recupFOV)/(correc));i=-1;
	while(teststd!=teststf)
	{
		teststd--;if(teststd==dY){varY=unP*i;found=2;break;}i++;
	}
	if(Math.abs(recupPitch)-Math.abs(dY)>25){varY=0;found=1;}
  }
   if(varX>0&&varY>0 &&varX<96)//found==2)//affiche
   {
	document.getElementById("marker3").style.top=varY.toString()+"%";document.getElementById("marker3").style.left=varX.toString()+"%";
	document.getElementById("marker3").style.visibility="visible";
	//textmarker=varX+","+varY;
	document.getElementById("textmark3").innerHTML=textmarker;//textmarker
   }
   else document.getElementById("marker3").style.visibility="hidden";
}else document.getElementById("marker3").style.visibility="hidden";
//--------------------------------------------------mark_end--------------------------------------------------
}
}
}

function markclick(markerid)
{
	var obj = JSON.parse(tempovalue[panoatribute]);
	if(markerid==1)alert(obj.mark1.cont);
	if(markerid==2)alert(obj.mark2.cont);
	if(markerid==3)alert(obj.mark3.cont);
}

function manylinks(openfile)
{
	var varlinks=[];
	var obj = JSON.parse(openfile);
	if(obj.link0!=undefined){varlinks.push({heading: obj.link0.heading,description: obj.link0.description,pano: obj.link0.pano});}
	if(obj.link1!=undefined){varlinks.push({heading: obj.link1.heading,description: obj.link1.description,pano: obj.link1.pano});}
	if(obj.link2!=undefined){varlinks.push({heading: obj.link2.heading,description: obj.link2.description,pano: obj.link2.pano});}
	return varlinks;
}

function initPano() {
        // Set up Street View and initially set it visible. Register the custom panorama provider function. Set the StreetView to display the custom panorama 'reception' which we check for below.
        var panorama = new google.maps.StreetViewPanorama(
            document.getElementById('map'), {
			pov: {
                heading: 270,
                pitch: 0
              },
			  //ID: 0,
			  pano: '0',
			  visible: true
			  });
        panorama.registerPanoProvider(getCustomPanorama);
      
	  
	    panorama.addListener('pano_changed', function() {
            var panoCell = document.getElementById('pano-cell');
            panoCell.innerHTML = panorama.getPano();
        });

        panorama.addListener('links_changed', function() {
            var linksTable = document.getElementById('links_table');
            while (linksTable.hasChildNodes()) {
              linksTable.removeChild(linksTable.lastChild);
            }

            var links = panorama.getLinks();
		if(links.length===0){
			var row = document.createElement('tr');
              linksTable.appendChild(row);
              var labelCell = document.createElement('td');
			  labelCell.innerHTML = '<b>No link</b>';
              var valueCell = document.createElement('td');
              valueCell.innerHTML = '<b> No value</b>';
              linksTable.appendChild(labelCell);
              linksTable.appendChild(valueCell);
			  }
		else{
            for (var i in links) {
              //var row = document.createElement('tr');
              //linksTable.appendChild(row);
              var labelCell = document.createElement('td');
              labelCell.innerHTML = '<b>Link: ' + i + '</b>';
              var valueCell = document.createElement('td');
              valueCell.innerHTML = links[i].description;
              linksTable.appendChild(labelCell);
              linksTable.appendChild(valueCell);
            }
		   }	
        });

        panorama.addListener('position_changed', function() {
            var positionCell = document.getElementById('position-cell');
            positionCell.firstChild.nodeValue = panorama.getPosition() + '';
        });

        panorama.addListener('pov_changed', function() {
            var headingCell = document.getElementById('heading-cell');
            var pitchCell = document.getElementById('pitch-cell');
			var zoomCell = document.getElementById('zoom-cell');
			var fovCell = document.getElementById('fov-cell');
            headingCell.firstChild.nodeValue = panorama.getPov().heading + '';
            pitchCell.firstChild.nodeValue = panorama.getPov().pitch + '';
			zoomCell.firstChild.nodeValue = panorama.getZoom() + '';
			fovCell.firstChild.nodeValue = 180 / Math.pow(2,panorama.getZoom());
        });
}
      // Return a pano image given the panoID.
function getCustomPanoramaTileUrl(pano, zoom, tileX, tileY) {
			//var text=zoom+"-"+tileX+"-"+tileY;
			//alert(text);
			//document.getElementById("POPUP").innerHTML = text;  
        //return 'https://developers.google.com/maps/documentation/javascript/examples/full/images/' + 'pano'+pano+'1024-' + zoom + '-' + tileX + '-' + tileY + '.jpg'
		 return '/content/img/pano-'+pano+'-1024-' + zoom + '-' + tileX + '-' + tileY + '.jpg';	
      }

      // Construct the appropriate StreetViewPanoramaData given
      // the passed pano IDs.
function getCustomPanorama(pano) {
	   panoatribute=pano;//panorama.SetPano(panoatribute);
	  	 txtFile = panoatribute+".txt";var str;
		 str=tempovalue[panoatribute];
		 var obj = JSON.parse(tempovalue[panoatribute]);
		//alert(str);

	return {
            location: {
              pano: panoatribute,
              description: 'EPSI - '+obj.name
            },
            links: manylinks(str),
            // The text for the copyright control.
            copyright: 'Imagery (c) 2018 Sushi',
            // The definition of the tiles for this panorama.
            tiles: {
              tileSize: new google.maps.Size(1024, 512),
              worldSize: new google.maps.Size(2048, 1024),
              // The heading in degrees at the origin of the panorama
              // tile set.
              centerHeading: 105,
              getTileUrl: getCustomPanoramaTileUrl
            }
          };		
}  
    </script>
    
  </body>
</html>